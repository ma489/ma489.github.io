<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-12-25T07:56:52-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Mansour Ahmed</title><subtitle>Mansour Ahmed&apos;s Personal Blog</subtitle><author><name>Mansour Ahmed</name><email>mail@mansourahmed.com</email></author><entry><title type="html">2024 Reading List</title><link href="http://localhost:4000/2024/12/2024-reading-list/" rel="alternate" type="text/html" title="2024 Reading List" /><published>2024-12-20T07:02:00-05:00</published><updated>2024-12-20T07:02:00-05:00</updated><id>http://localhost:4000/2024/12/2024-reading-list</id><content type="html" xml:base="http://localhost:4000/2024/12/2024-reading-list/"><![CDATA[<p>As 2024 draws to a close, it’s time for another retrospective list of the most interesting books I’ve read this year.</p>

<p>The list is decidedly shorter than usual, a result of my focus on completing my Master’s degree — a year spent diving into academic papers more than leisure reading. (I’ve not included the papers I read for my thesis here).</p>

<p>Interestingly, not a single physical book made the cut this year — a sign of the times, perhaps? Additionally, most of the titles are <em>recent</em> publications, with the obvious exception of the timeless wisdom found in Marcus Aurelius’ writings (!).</p>

<p>Finally, a delightful addition to my reading routine this year was to attend the excellent <a href="https://readingrhythms.co"><em>Reading Rhythms</em></a> events, in which people gather together to individually read a book of their choice, to curated background music; turning reading into a communal experience.</p>

<h3 id="audiobooks">Audiobooks</h3>

<ul>
  <li><a href="https://www.goodreads.com/book/show/204881333-why-can-t-i-just-enjoy-things">Why Can’t I Just Enjoy Things?: A Comedian’s Guide to Autism</a> (Novellie, 2024)</li>
  <li><a href="https://www.goodreads.com/book/show/56883977-friends">Friends: Understanding the Power of our Most Important Relationships</a> (Dunbar, 2021)</li>
  <li><a href="https://www.goodreads.com/book/show/56898242-move">Move: The Forces Uprooting Us</a> (Khanna, 2021)</li>
  <li><a href="https://www.goodreads.com/book/show/18693771-the-body-keeps-the-score">The Body Keeps the Score: Brain, Mind, and Body in the Healing of Trauma</a> (van der Kolk, 2014)</li>
  <li><a href="https://www.goodreads.com/book/show/30659.Meditations">Meditations</a> (Aurelius, 180)</li>
  <li><a href="https://www.goodreads.com/book/show/192724314-how-to-become-famous">How to Become Famous: Lost Einsteins, Forgotten Superstars, and How the Beatles Came to Be</a> (Beyer, 2024)</li>
</ul>

<h3 id="papers">Papers</h3>

<ul>
  <li>Vaswani, A. et al. (2017). <a href="https://papers.nips.cc/paper_files/paper/2017/hash/3f5ee243547dee91fbd053c1c4a845aa-Abstract.html">Attention Is All You Need</a>. <em>Advances in Neural Information Processing Systems</em>.</li>
  <li>Sculley, D., et al. (2015). <a href="https://dl.acm.org/doi/10.5555/2969442.2969519">Hidden technical debt in Machine learning systems</a>. In <em>Proceedings of the 28th International Conference on Neural Information Processing Systems - Volume 2 (NIPS’15). MIT Press, Cambridge, MA, USA, 2503–2511</em>.</li>
  <li>Srivastava, N., Hinton, G., Krizhevsky, A., Sutskever, I., &amp; Salakhutdinov, R. (2014). <a href="https://jmlr.org/papers/v15/srivastava14a.html">Dropout: a simple way to prevent neural networks from overfitting</a>. <em>The journal of machine learning research, 15(1), 1929-1958</em>.</li>
  <li>Chen, H., Gilad-Bachrach, R., Han, K. et al. <a href="https://doi.org/10.1186/s12920-018-0397-z">Logistic Regression over Encrypted Data from Fully Homomorphic Encryption</a>. <em>BMC Med Genomics 11 (Suppl 4), 81 (2018)</em>.</li>
  <li>T. Li, A. K. Sahu, A. Talwalkar and V. Smith (2020). <a href="https://doi.org/10.1109/MSP.2020.2975749">Federated Learning: Challenges, Methods, and Future Directions</a>. <em>IEEE Signal Processing Magazine, vol. 37, no. 3, pp. 50-60, May 2020</em>.</li>
  <li>Rigaki, Maria, and Sebastian Garcia. (2023). <a href="https://doi.org/10.1145/3624010">A Survey of Privacy Attacks in Machine Learning</a>. <em>ACM Computing Surveys, vol. 56, no. 4, Nov. 2023, pp. 1–34</em>.</li>
</ul>]]></content><author><name>Mansour Ahmed</name><email>mail@mansourahmed.com</email></author><summary type="html"><![CDATA[As 2024 draws to a close, it’s time for another retrospective list of the most interesting books I’ve read this year.]]></summary></entry><entry><title type="html">2023 Reading List</title><link href="http://localhost:4000/2023/12/2023-reading-list/" rel="alternate" type="text/html" title="2023 Reading List" /><published>2023-12-28T07:02:00-05:00</published><updated>2023-12-28T07:02:00-05:00</updated><id>http://localhost:4000/2023/12/2023-reading-list</id><content type="html" xml:base="http://localhost:4000/2023/12/2023-reading-list/"><![CDATA[<p>Another year, another journey through a fascinating set of books. Some of my selections this year were inspired by the excellent <a href="https://www.rebelbook.club/"><em>Rebel Book Club</em></a>, a community I’m proud to be part of. Others were part of my ongoing Master’s degree studies in Machine learning. Explore my curated list below!</p>

<h3 id="books">Books</h3>

<ul>
  <li><a href="https://www.statlearning.com/">An Introduction to Statistical Learning (with Applications in R)</a> (James et al, 2013)</li>
  <li><a href="https://hastie.su.domains/ElemStatLearn/">The Elements of Statistical Learning (Data Mining, Inference, and Prediction)</a> (Hastie et al, 2009)</li>
</ul>

<h3 id="audiobooks">Audiobooks</h3>

<ul>
  <li><a href="https://www.goodreads.com/book/show/90590134-the-coming-wave">The Coming wave: Technology, Power, and the Twenty-first Century’s Greatest Dilemma</a> (Suleyman, 2023)</li>
  <li><a href="https://www.goodreads.com/book/show/48816586-software-engineering-at-google">Software Engineering at Google</a> (Winters et al, 2020)</li>
  <li><a href="https://www.goodreads.com/book/show/38315.Fooled_by_Randomness">Fooled by Randomness: The Hidden Role of Chance in Life and in the Markets</a> (Taleb, 2001)</li>
  <li><a href="https://www.goodreads.com/book/show/84525.What_Got_You_Here_Won_t_Get_You_There">What Got You Here Won’t Get You There</a> (Goldsmith, 2006)</li>
  <li><a href="https://www.goodreads.com/book/show/66933.The_Wretched_of_the_Earth">Wretched of the Earth</a> (Fanon, 1961)</li>
  <li><a href="https://www.goodreads.com/book/show/1303.The_48_Laws_of_Power">The 48 Laws of Power</a> (Greene, 1998)</li>
  <li><a href="https://www.goodreads.com/book/show/11468377-thinking-fast-and-slow">Thinking, Fast and Slow</a> (Kahneman, 2011)</li>
  <li><a href="https://www.goodreads.com/book/show/42731728-lost-in-a-good-game">Lost in a Good Game: Why we play video games and what they can do for us</a> (Etchells, 2019)</li>
  <li><a href="https://www.goodreads.com/book/show/55338982-cultish">Cultish: The Language of Fanaticism</a> (Montell, 2021)</li>
  <li><a href="https://www.goodreads.com/book/show/45415787-the-unexpected-joy-of-the-ordinary">The Unexpected Joy of the Ordinary</a> (Gray, 2020)</li>
  <li><a href="https://www.goodreads.com/book/show/27491.The_Evolution_Of_Desire">The Evolution of Desire</a> (Buss, 1994)</li>
</ul>

<h3 id="papers">Papers</h3>

<ul>
  <li>Fred S. Guthery and Ralph L. Bingham. (2007). <a href="https://doi.org/10.2193/2006-285">A Primer on Interpreting Regression Models</a>. <em>Journal of Wildlife Management 71(3), 684-692, (1 May 2007)</em>.</li>
  <li>Amy Berrington de González. D. R. Cox. (2007). <a href="https://doi.org/10.1214/07-AOAS124">Interpretation of interaction: A review</a>. <em>Ann. Appl. Stat. 1 (2) 371 - 385, December 2007</em>.</li>
  <li>Chesnaye, N. C., et. al. (2022). <a href="https://doi.org/10.1093/ckj/sfab158">An introduction to inverse probability of treatment weighting in observational research</a>. <em>Clinical Kidney Journal, Volume 15, Issue 1, January 2022, Pages 14–20</em>.</li>
  <li>Kohavi, R., Tang, D., &amp; Xu, Y. (2020). <a href="http://doi.org/10.1017/9781108653985.012">Ethics in Controlled Experiments</a>. In <em>Trustworthy Online Controlled Experiments: A Practical Guide to A/B Testing (pp. 116-124)</em>. Cambridge: Cambridge University Press.</li>
  <li>Van Der Bles, A. M., et al. (2019). <a href="http://doi.org/10.1098/rsos.181870">Communicating uncertainty about facts, numbers and science</a>. <em>R. Soc. Open Sci. 6: 181870</em>.</li>
  <li>Wickham, H. (2014). <a href="https://doi.org/10.18637/jss.v059.i10">Tidy Data</a>. <em>Journal of Statistical Software, 59(10), 1–23</em>.</li>
  <li>Wickham, H. (2010). <a href="https://doi.org/10.1198/jcgs.2009.07098">A Layered Grammar of Graphics</a>. <em>Journal of Computational and Graphical Statistics, 19(1), 3–28</em>.</li>
  <li>Watson, J., &amp; Holmes, C. (2016). <a href="http://www.jstor.org/stable/26408074">Approximate Models and Robust Decisions</a>. <em>Statistical Science, 31(4), 465–489</em>.</li>
  <li>Meng, X.-L. (2018). <a href="https://www.jstor.org/stable/26542550">Statistical Paradises and Paradoxes in Big Data (I): Law of Large Populations, Big Data Paradox, and the 2016 US Presidential Election</a>. <em>The Annals of Applied Statistics, 12(2), 685–726</em>.</li>
  <li>Lindley, D. V., &amp; Phillips, L. D. (1976). <a href="https://doi.org/10.1080/00031305.1976.10479154">Inference for a Bernoulli Process (a Bayesian View)</a>. <em>The American Statistician, 30(3), 112–119</em>.</li>
  <li>Paleyes, A., Urma, R. G., &amp; Lawrence, N. D. (2022). <a href="https://dl.acm.org/doi/full/10.1145/3533378">Challenges in deploying machine learning: a survey of case studies</a>. <em>ACM computing surveys, 55(6), 1-29</em>.</li>
  <li>Kim, M., Zimmermann, T., DeLine, R., &amp; Begel, A. (2017). <a href="https://ieeexplore.ieee.org/abstract/document/8046093">Data Scientists in Software Teams: State of the Art and Challenges</a>. <em>IEEE Transactions on Software Engineering, 44(11), 1024-1038</em>.</li>
  <li>Verma, S., &amp; Rubin, J. (2018). <a href="https://dl.acm.org/doi/abs/10.1145/3194770.3194776">Fairness Definitions Explained</a>. <em>In Proceedings of the international workshop on software fairness (pp. 1-7)</em>.</li>
</ul>]]></content><author><name>Mansour Ahmed</name><email>mail@mansourahmed.com</email></author><summary type="html"><![CDATA[Another year, another journey through a fascinating set of books. Some of my selections this year were inspired by the excellent Rebel Book Club, a community I’m proud to be part of. Others were part of my ongoing Master’s degree studies in Machine learning. Explore my curated list below!]]></summary></entry><entry><title type="html">2022 Reading List</title><link href="http://localhost:4000/2022/12/2022-reading-list/" rel="alternate" type="text/html" title="2022 Reading List" /><published>2022-12-11T07:02:00-05:00</published><updated>2022-12-11T07:02:00-05:00</updated><id>http://localhost:4000/2022/12/2022-reading-list</id><content type="html" xml:base="http://localhost:4000/2022/12/2022-reading-list/"><![CDATA[<p>A much shorter list of <em>books</em> this year, as I’m reading more academic papers instead</p>

<h3 id="books">Books</h3>

<ul>
  <li><a href="https://www.goodreads.com/book/show/46074.Limbo">Limbo</a> (Lubrano, 2003)</li>
  <li><a href="https://www.goodreads.com/en/book/show/44244975-the-ethical-algorithm">The Ethical Algorithm</a> (Kearns &amp; Roth, 2019)</li>
</ul>

<h3 id="audiobooks">Audiobooks</h3>

<ul>
  <li><a href="https://www.goodreads.com/en/book/show/60149538-virtual-society">Virtual Society</a> (Narula, 2022)</li>
  <li><a href="https://www.goodreads.com/en/book/show/49933627-black-spartacus">Black Spartacus</a> (Hazareesingh, 2020)</li>
  <li><a href="https://www.goodreads.com/book/show/30354426-solve-for-happy">Solve For Happy</a> (Gawdat, 2017)</li>
  <li><a href="https://www.goodreads.com/book/show/1835405.When_Prophecy_Fails">When Prophecy Fails</a> (Festinger et al, 1956)</li>
  <li><a href="https://www.goodreads.com/book/show/45748989-indistractable">Indistractable</a> (Eyal, 2019)</li>
  <li><a href="https://www.goodreads.com/book/show/97641.Nice_Girls_Don_t_Get_the_Corner_Office">Nice Girls Don’t Get the Corner Office</a> (Frankel, 2010)</li>
</ul>

<h3 id="papers">Papers</h3>

<ul>
  <li>Floridi, L., &amp; Cowls, J. (2019). <a href="https://doi.org/10.1162/99608f92.8cd550d1">A Unified Framework of Five Principles for AI in Society</a>. <em>Harvard Data Science Review, 1(1)</em>.</li>
  <li>Narayanan, A. &amp; Shmatikov, V. (2008). <a href="https://doi.org/10.1109/SP.2008.33">Robust De-anonymization of Large Sparse Datasets</a>. <em>2008 IEEE Symposium on Security and Privacy (sp 2008). 111–125</em>.</li>
  <li>Buolamwini, J., &amp; Gebru, T. (2018). <a href="https://proceedings.mlr.press/v81/buolamwini18a.html">Gender shades: Intersectional accuracy disparities in commercial gender classification</a>. <em>PMLR Conference on fairness, accountability and transparency (pp. 77-91)</em>.</li>
  <li>Awad, E., Dsouza, S., Kim, R. et al. <a href="https://doi.org/10.1038/s41586-018-0637-6">The Moral Machine experiment</a>. <em>Nature 563, 59–64 (2018)</em>.</li>
  <li>Ribeiro, M. T., Singh, S. &amp; Guestrin, C. (2016). <a href="https://doi.org/10.1145/2939672.2939778">“Why Should I Trust You?”: Explaining the Predictions of Any Classifier</a>. <em>Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining. 1135-1144</em>.</li>
  <li>Ameisen, E. (2020). <em>(Chapter 11)</em>. In <a href="https://www.oreilly.com/library/view/building-machine-learning/9781492045106/"><em>Building machine learning powered applications: going from idea to product</em></a>. First edition. O’Reilly Media, Inc.</li>
</ul>]]></content><author><name>Mansour Ahmed</name><email>mail@mansourahmed.com</email></author><summary type="html"><![CDATA[A much shorter list of books this year, as I’m reading more academic papers instead]]></summary></entry><entry><title type="html">Mathematics for Machine Learning Specialisation</title><link href="http://localhost:4000/2022/5/maths-ml/" rel="alternate" type="text/html" title="Mathematics for Machine Learning Specialisation" /><published>2022-05-15T15:02:00-04:00</published><updated>2022-05-15T15:02:00-04:00</updated><id>http://localhost:4000/2022/5/2022-maths-ml</id><content type="html" xml:base="http://localhost:4000/2022/5/maths-ml/"><![CDATA[<p>I have just <a href="https://www.coursera.org/account/accomplishments/specialization/ZC9LYDJ8A9RP">completed</a> the <a href="https://www.coursera.org/specializations/mathematics-machine-learning">Mathematics for Machine Learning Specialisation</a>, by Imperial College London on Coursera. It was a three part course, covering: Linear Algebra, Multivariate Calculus and Principal Component Analysis.</p>

<p><a href="https://www.coursera.org/account/accomplishments/specialization/ZC9LYDJ8A9RP"><img src="/assets/img/Coursera_mml.png" alt="certificate" /></a></p>]]></content><author><name>Mansour Ahmed</name><email>mail@mansourahmed.com</email></author><summary type="html"><![CDATA[I have just completed the Mathematics for Machine Learning Specialisation, by Imperial College London on Coursera. It was a three part course, covering: Linear Algebra, Multivariate Calculus and Principal Component Analysis.]]></summary></entry><entry><title type="html">2021 Reading List</title><link href="http://localhost:4000/2021/12/2021-reading-list/" rel="alternate" type="text/html" title="2021 Reading List" /><published>2021-12-16T14:02:00-05:00</published><updated>2021-12-16T14:02:00-05:00</updated><id>http://localhost:4000/2021/12/2021-reading-list</id><content type="html" xml:base="http://localhost:4000/2021/12/2021-reading-list/"><![CDATA[<p>This year I discovered I could get Kindle ebooks through my local public library! I also joined a book club, which has been useful in diversifying the range of books I read. I’m also starting to learn how to abandon books part-way that I no longer enjoy reading - rather than finishing them <em>just because</em> I started (I’m no longer convinced this is a good thing).</p>

<h3 id="books">Books</h3>

<ul>
  <li><a href="https://www.goodreads.com/book/show/3869.A_Brief_History_of_Time">A Brief History of Time (Hawking)</a></li>
  <li><a href="https://www.goodreads.com/book/show/41457400-the-life-changing-magic-of-numbers">The Life-Changing Magic of Numbers (Seagull)</a></li>
  <li><a href="https://www.goodreads.com/book/show/40745.Mindset">Mindset (Dweck)</a></li>
</ul>

<h3 id="audiobooks">Audiobooks</h3>

<ul>
  <li><a href="https://www.goodreads.com/book/show/55361205-a-promised-land">A Promised Land (Obama)</a></li>
  <li><a href="https://www.goodreads.com/book/show/170448.Animal_Farm">Animal Farm (Orwell)</a></li>
  <li><a href="https://www.goodreads.com/book/show/18144590-the-alchemist">The Alchemist (Coelho)</a></li>
  <li><a href="https://www.goodreads.com/book/show/37424706-the-art-of-gathering">The Art of Gathering (Parker)</a></li>
  <li><a href="https://www.goodreads.com/book/show/51933.Madness_and_Civilization">Madness &amp; Civilization (Foucault)</a></li>
  <li><a href="https://www.goodreads.com/book/show/52585099-surrender-white-people">Surrender! (Hughley)</a></li>
  <li><a href="https://www.goodreads.com/en/book/show/53302332-sea-wall-a-life">Sea Wall/A Life (Stephens/Payne)</a></li>
  <li><a href="https://www.goodreads.com/book/show/29502354-rest">Rest (Pang)</a></li>
  <li><a href="https://www.goodreads.com/en/book/show/41882450-the-fate-of-food">The Fate of Food (Little)</a></li>
  <li><a href="https://www.goodreads.com/book/show/3828382-tribes">Tribes (Godin)</a></li>
  <li><a href="https://www.goodreads.com/book/show/23878688-the-5-love-languages">The Five Love Languages (Chapman)</a></li>
  <li><a href="https://www.goodreads.com/book/show/4069.Man_s_Search_for_Meaning">Man’s Search for Meaning (Frankl)</a></li>
  <li><a href="https://www.goodreads.com/book/show/57509170-the-science-of-love">The Science of Love (Goodfriend)</a></li>
  <li><a href="https://www.goodreads.com/book/show/485894.The_Metamorphosis">Metamorphosis (Kafka)</a></li>
  <li><a href="https://www.goodreads.com/book/show/17690.The_Trial">The Trial (Kafka)</a></li>
  <li><a href="https://www.goodreads.com/book/show/27213329-grit">Grit (Duckworth)</a></li>
  <li><a href="https://www.goodreads.com/book/show/46002342-me-and-white-supremacy">Me and White Supremacy (Saad)</a></li>
  <li><a href="https://www.goodreads.com/book/show/25387895-the-confidence-game">Confidence Game (Konnikova)</a></li>
  <li><a href="https://www.goodreads.com/book/show/25744928-deep-work">Deep Work (Newport)</a></li>
  <li><a href="https://www.goodreads.com/book/show/52879286-humankind">Humankind (Bregman)</a></li>
  <li><a href="https://www.goodreads.com/book/show/28862.The_Prince">The Prince (Machiavelli)</a></li>
  <li><a href="https://www.goodreads.com/book/show/368593.The_4_Hour_Workweek">4-Hour Work Week (Ferris)</a></li>
  <li><a href="https://www.goodreads.com/book/show/52529.The_Secret">The Secret (Byrne)</a></li>
  <li><a href="https://www.goodreads.com/book/show/57205027-nice-racism">Nice Racism (DiAngelo)</a></li>
  <li><a href="https://www.goodreads.com/book/show/51022071-catch-and-kill">Catch and Kill (Farrow)</a></li>
  <li><a href="https://www.goodreads.com/en/book/show/53138238-the-three-mothers">The Three Mothers (Tubbs)</a></li>
  <li><a href="https://www.goodreads.com/book/show/58408562-move-fast">Move Fast (Meyerson)</a></li>
  <li><a href="https://www.goodreads.com/book/show/26156469-never-split-the-difference">Never Split The Difference (Voss)</a></li>
  <li><a href="https://www.goodreads.com/book/show/56668328-the-bomber-mafia">Bomber Mafia (Gladwell)</a></li>
  <li><a href="https://www.goodreads.com/book/show/9547888-attached">Attached (Levine)</a></li>
  <li><a href="https://www.goodreads.com/book/show/56019043-beyond-order">Beyond Order (Peterson)</a></li>
  <li><a href="https://www.goodreads.com/book/show/45731395-the-deficit-myth">The Deficit Myth (Kelton)</a></li>
  <li><a href="https://www.goodreads.com/book/show/7873438-sleights-of-mind">Sleights of Mind (Macknik et al)</a></li>
</ul>]]></content><author><name>Mansour Ahmed</name><email>mail@mansourahmed.com</email></author><summary type="html"><![CDATA[This year I discovered I could get Kindle ebooks through my local public library! I also joined a book club, which has been useful in diversifying the range of books I read. I’m also starting to learn how to abandon books part-way that I no longer enjoy reading - rather than finishing them just because I started (I’m no longer convinced this is a good thing).]]></summary></entry><entry><title type="html">Movie data analysis</title><link href="http://localhost:4000/2021/09/movie-data-analysis/" rel="alternate" type="text/html" title="Movie data analysis" /><published>2021-09-01T15:02:00-04:00</published><updated>2021-09-01T15:02:00-04:00</updated><id>http://localhost:4000/2021/09/movie-data-analysis</id><content type="html" xml:base="http://localhost:4000/2021/09/movie-data-analysis/"><![CDATA[<h2 id="intro">Intro</h2>
<p>I decided to dig into my film-watching habits as a data exploration exercise.</p>

<p>I <em>used</em> to watch a <em>lot</em> of films. And while watching movies is no longer a significant pastime for me, it was fun at the time. Aside from the apparent interest in the films themselves, the extensive pop-culture knowledge I gained acted as some social currency. Back then, I would make the (outrageous) claim that I’d probably watched every film that would ever come up in casual conversation.</p>

<p>After each film I watched, I would immediately then give it a rating out of 10 on <a href="https://www.imdb.com/">IMDb</a>. I didn’t think I was a critic - this was just the best way to get recommendations for even more films in the pre-Netflix era. A pleasant side effect of this ritual is that I now have a record of every movie I ever watched in that time, along with when I watched it, what I thought of it and other metadata. With the help of IMDb’s data export feature, I now have my hands on my own little cinematic time capsule <em>!</em> This blog post aims to take a look at that data in pursuit of insights.</p>

<h3 id="some-of-the-questions-i-want-to-answer">Some of the questions I want to answer</h3>
<ul>
  <li>What were my viewing habits?</li>
  <li>Did I have interesting or unusual tastes, or was I poser?</li>
  <li>How do my ratings compare to other IMDB users?</li>
</ul>

<h3 id="housekeeping-notes">Housekeeping notes</h3>
<ul>
  <li>I’ve written this post as a <a href="https://jupyter.org/">Jupyter</a> notebook, with inline code snippets, and exported as markdown (you can see the original notebook <a href="https://github.com/ma489/imdb/blob/main/imdb_data.ipynb">here</a>).</li>
  <li>If you’re not familiar with Jupyter, it’s a <a href="https://en.wikipedia.org/wiki/Notebook_interface">notebook environment</a> that enables <a href="https://en.wikipedia.org/wiki/Literate_programming">literate programming</a>.</li>
  <li>I will keep my dataset private (see <a href="https://arxiv.org/abs/cs/0610105">here</a> for why <em>!</em>), but you can grab your own dataset <a href="https://www.imdb.com/list/ratings">here</a>.</li>
  <li>I’ll be using the terms <em>‘movies’</em> and <em>‘films’</em> interchangably throughout. I’m sure there’s some technical distinction, but generally I think <a href="https://en.wiktionary.org/wiki/movie#Noun">the former is an Americanism</a>.</li>
  <li>I’ll be making use of the two canonical Python libraries: <a href="https://pandas.pydata.org/"><code class="language-plaintext highlighter-rouge">pandas</code></a> (for data analysis) and <a href="https://seaborn.pydata.org/"><code class="language-plaintext highlighter-rouge">seaborn</code></a> (for visualisation).</li>
</ul>

<h2 id="setup">Setup</h2>
<p>First, some (non-interesting) initial setup</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Imports
</span><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">seaborn</span> <span class="k">as</span> <span class="n">sns</span>

<span class="c1"># Configuration
</span><span class="n">pd</span><span class="p">.</span><span class="n">options</span><span class="p">.</span><span class="n">display</span><span class="p">.</span><span class="n">float_format</span> <span class="o">=</span> <span class="s">'{:.1f}'</span><span class="p">.</span><span class="nb">format</span>
<span class="n">pd</span><span class="p">.</span><span class="n">options</span><span class="p">.</span><span class="n">mode</span><span class="p">.</span><span class="n">chained_assignment</span> <span class="o">=</span> <span class="bp">None</span>  <span class="c1"># default='warn'
</span><span class="n">sns</span><span class="p">.</span><span class="nb">set</span><span class="p">(</span><span class="n">rc</span><span class="o">=</span><span class="p">{</span><span class="s">'figure.figsize'</span><span class="p">:(</span><span class="mi">16</span><span class="p">,</span><span class="mi">12</span><span class="p">)})</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Let's read in the data
</span><span class="n">INPUT_FILE_ENCODING</span> <span class="o">=</span> <span class="s">"ISO-8859-1"</span>
<span class="n">input_data_path</span> <span class="o">=</span> <span class="s">"imdb_ratings.csv"</span>
<span class="n">imdb_data</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="n">input_data_path</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="n">INPUT_FILE_ENCODING</span><span class="p">)</span>
<span class="c1"># ... and preview it
</span><span class="n">imdb_data</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<style>
  table {
    display: block;
    max-width: -moz-fit-content;
    max-width: fit-content;
    margin: 50 auto;
    overflow-x: auto;
    white-space: nowrap;
  }
</style>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Const</th>
      <th>Your Rating</th>
      <th>Date Rated</th>
      <th>Title</th>
      <th>URL</th>
      <th>Title Type</th>
      <th>IMDb Rating</th>
      <th>Runtime (mins)</th>
      <th>Year</th>
      <th>Genres</th>
      <th>Num Votes</th>
      <th>Release Date</th>
      <th>Directors</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>tt0100053</td>
      <td>1</td>
      <td>2013-01-18</td>
      <td>Loose Cannons</td>
      <td>https://www.imdb.com/title/tt0100053/</td>
      <td>movie</td>
      <td>4.9</td>
      <td>94.0</td>
      <td>1990</td>
      <td>Action, Comedy, Crime, Thriller</td>
      <td>4394.0</td>
      <td>1990-02-09</td>
      <td>Bob Clark</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Let's perform some minor cleanup of the data
# ... filtering out the non-movie entries (TV shows, video games, etc.)
</span><span class="n">movies</span> <span class="o">=</span> <span class="n">imdb_data</span><span class="p">[</span><span class="n">imdb_data</span><span class="p">[</span><span class="s">'Title Type'</span><span class="p">]</span> <span class="o">==</span> <span class="s">'movie'</span><span class="p">]</span>
<span class="c1"># ... and formatting the date field
</span><span class="n">movies</span><span class="p">[</span><span class="s">'Date Rated'</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">movies</span><span class="p">[</span><span class="s">'Date Rated'</span><span class="p">])</span>
</code></pre></div></div>

<p>Great, now we’re ready to explore!</p>

<h2 id="summary">Summary</h2>
<p>Next, let’s look at some <a href="https://en.wikipedia.org/wiki/Summary_statistics">summary statistics</a> to get an overview of the dataset. Think of this as a <a href="https://en.wiktionary.org/wiki/tl;dr#Phrase">tl;dr</a>.</p>

<p>We have different datatypes in our dataset, so we’ll summarize these separately:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Numeric fields
</span><span class="n">movies</span><span class="p">.</span><span class="n">describe</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Your Rating</th>
      <th>IMDb Rating</th>
      <th>Runtime (mins)</th>
      <th>Year</th>
      <th>Num Votes</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>869.0</td>
      <td>868.0</td>
      <td>868.0</td>
      <td>869.0</td>
      <td>868.0</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>5.1</td>
      <td>6.8</td>
      <td>111.6</td>
      <td>2000.3</td>
      <td>273587.3</td>
    </tr>
    <tr>
      <th>std</th>
      <td>2.2</td>
      <td>1.1</td>
      <td>22.2</td>
      <td>11.7</td>
      <td>320816.3</td>
    </tr>
    <tr>
      <th>min</th>
      <td>1.0</td>
      <td>2.1</td>
      <td>60.0</td>
      <td>1941.0</td>
      <td>88.0</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>4.0</td>
      <td>6.2</td>
      <td>96.0</td>
      <td>1995.0</td>
      <td>65191.5</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>6.0</td>
      <td>6.9</td>
      <td>107.0</td>
      <td>2002.0</td>
      <td>166071.5</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>7.0</td>
      <td>7.6</td>
      <td>123.2</td>
      <td>2009.0</td>
      <td>361292.5</td>
    </tr>
    <tr>
      <th>max</th>
      <td>10.0</td>
      <td>9.3</td>
      <td>210.0</td>
      <td>2018.0</td>
      <td>2301033.0</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Object fields
</span><span class="n">movies</span><span class="p">.</span><span class="n">describe</span><span class="p">(</span><span class="n">include</span><span class="o">=</span><span class="p">[</span><span class="nb">object</span><span class="p">])</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Const</th>
      <th>Title</th>
      <th>URL</th>
      <th>Title Type</th>
      <th>Genres</th>
      <th>Release Date</th>
      <th>Directors</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>869</td>
      <td>869</td>
      <td>869</td>
      <td>869</td>
      <td>868</td>
      <td>868</td>
      <td>869</td>
    </tr>
    <tr>
      <th>unique</th>
      <td>869</td>
      <td>867</td>
      <td>869</td>
      <td>1</td>
      <td>300</td>
      <td>835</td>
      <td>533</td>
    </tr>
    <tr>
      <th>top</th>
      <td>tt0277371</td>
      <td>The Omen</td>
      <td>https://www.imdb.com/title/tt0061695/</td>
      <td>movie</td>
      <td>Comedy</td>
      <td>2007-06-12</td>
      <td>Steven Spielberg</td>
    </tr>
    <tr>
      <th>freq</th>
      <td>1</td>
      <td>2</td>
      <td>1</td>
      <td>869</td>
      <td>56</td>
      <td>3</td>
      <td>14</td>
    </tr>
  </tbody>
</table>
</div>

<p>OK, so I’ve watched (at least) 869 films. A quick glance of the IMDb website shows that figure includes 96 of <a href="https://www.imdb.com/chart/top/">their Top 250 films</a> (and also 6 of <a href="https://www.imdb.com/chart/bottom">their bottom 100 films</a>). It goes without saying that 869 is a lower-bound for my total lifetime count, since I’ve continued to watch films but not rate them, and of course I watched films before I discovered IMDb.</p>

<h2 id="questions">Questions</h2>
<p>Now, let’s ask some questions of the data</p>

<h3 id="what-do-my-ratings-look-like">What do my ratings look like?</h3>
<p>Zooming in on just the <em>ratings</em>, I’ll use a <a href="https://en.wikipedia.org/wiki/Histogram">histogram</a> to visualise the <a href="https://en.wikipedia.org/wiki/Frequency_distribution">frequency distribution</a>:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sns</span><span class="p">.</span><span class="n">catplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">movies</span><span class="p">,</span> <span class="n">kind</span><span class="o">=</span><span class="s">"count"</span><span class="p">,</span>  <span class="n">x</span><span class="o">=</span><span class="s">'Your Rating'</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="/assets/img/output_12_1.png" alt="png" /></p>

<p>A lot more ‘1’ ratings than I expected! I must have been hard to please.</p>

<p>We can also plot the <a href="https://en.wikipedia.org/wiki/Kernel_density_estimation">KDE</a> for an estimate of the <a href="https://en.wikipedia.org/wiki/Probability_density_function">probability density</a> (the y-axis here is ‘density’):</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sns</span><span class="p">.</span><span class="nb">set</span><span class="p">(</span><span class="n">rc</span><span class="o">=</span><span class="p">{</span><span class="s">'figure.figsize'</span><span class="p">:(</span><span class="mi">8</span><span class="p">,</span><span class="mi">6</span><span class="p">)})</span>
<span class="n">sns</span><span class="p">.</span><span class="n">distplot</span><span class="p">(</span><span class="n">a</span><span class="o">=</span><span class="n">movies</span><span class="p">[</span><span class="s">'Your Rating'</span><span class="p">],</span> <span class="n">bins</span><span class="o">=</span><span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">11</span><span class="p">))</span>
</code></pre></div></div>

<p><img src="/assets/img/output_14_1.png" alt="png" /></p>

<p>It look’s like about half of my ratings were either a 6 or a 7 out of 10. How very diplomatic(!)</p>

<h3 id="how-do-my-ratings-compare-to-other-imdb-users">How do my ratings compare to other IMDB users?</h3>
<p>Let’s calculate the <a href="https://en.wikipedia.org/wiki/Spearman%27s_rank_correlation_coefficient">Spearman’s rank correlation coefficient</a>, as a measure of <a href="https://en.wikipedia.org/wiki/Inter-rater_reliability">Inter-rater reliability</a>. It’s values range from -1 to 1 (fully opposed to identical). We’re using Spearman here because our data (Ratings out of 10) is <a href="https://en.wikipedia.org/wiki/Ordinal_data">ordinal</a>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">movies</span><span class="p">[</span><span class="s">'Your Rating'</span><span class="p">].</span><span class="n">corr</span><span class="p">(</span><span class="n">movies</span><span class="p">[</span><span class="s">'IMDb Rating'</span><span class="p">],</span> <span class="n">method</span><span class="o">=</span><span class="s">'spearman'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0.4413428717210753
</code></pre></div></div>

<p>Intuitively, a weak positive correlation.</p>

<p>Let’s visualize this relationship. I’ll use a catplot here to get around the problem of representing categorical data with a scatter plot</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sns</span><span class="p">.</span><span class="n">catplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'Your Rating'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'IMDb Rating'</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">movies</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="/assets/img/output_19_1.png" alt="png" /></p>

<h3 id="what-day-did-i-tend-to-watch-films">What day did I tend to watch films?</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># non-interesting date formatting
</span><span class="n">movies</span><span class="p">[</span><span class="s">'Weekday'</span><span class="p">]</span> <span class="o">=</span> <span class="n">movies</span><span class="p">[</span><span class="s">'Date Rated'</span><span class="p">].</span><span class="n">dt</span><span class="p">.</span><span class="n">day_name</span><span class="p">()</span>
<span class="n">movies</span><span class="p">[</span><span class="s">'WeekdayNumeric'</span><span class="p">]</span> <span class="o">=</span> <span class="n">movies</span><span class="p">[</span><span class="s">'Date Rated'</span><span class="p">].</span><span class="n">dt</span><span class="p">.</span><span class="n">weekday</span>
<span class="n">movies</span> <span class="o">=</span> <span class="n">movies</span><span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s">'WeekdayNumeric'</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
<span class="c1"># Let's plot 
</span><span class="n">sns</span><span class="p">.</span><span class="n">catplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">"Weekday"</span><span class="p">,</span> <span class="n">kind</span><span class="o">=</span><span class="s">"count"</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">movies</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span> <span class="n">aspect</span><span class="o">=</span><span class="mi">12</span><span class="o">/</span><span class="mi">9</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="/assets/img/output_21_1.png" alt="png" /></p>

<p>The weekends of course make sense. But Monday is unexpected - TGIM?</p>

<h3 id="what-year-did-i-watch-the-most-films">What year did I watch the most films?</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">movies</span><span class="p">[</span><span class="s">'YearWatched'</span><span class="p">]</span> <span class="o">=</span> <span class="n">movies</span><span class="p">[</span><span class="s">'Date Rated'</span><span class="p">].</span><span class="n">dt</span><span class="p">.</span><span class="n">year</span>
<span class="n">sns</span><span class="p">.</span><span class="n">catplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">"YearWatched"</span><span class="p">,</span> <span class="n">kind</span><span class="o">=</span><span class="s">"count"</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">movies</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mi">6</span><span class="p">,</span> <span class="n">aspect</span><span class="o">=</span><span class="mi">12</span><span class="o">/</span><span class="mi">9</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="/assets/img/output_24_1.png" alt="png" /></p>

<p>2008, clearly! That was about 1 film per weekday! It looks like the intensity waned over time: 2010, in contrast, was my first year in college - studying obviously took precedence!</p>

<h3 id="what-is-the-least-well-known-film-ive-watched-by-number-of-ratings-by-other-users">What is the <em>least</em> well-known film I’ve watched? (by number of ratings by other users)</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">movies</span><span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s">'Num Votes'</span><span class="p">).</span><span class="n">head</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Const</th>
      <th>Your Rating</th>
      <th>Date Rated</th>
      <th>Title</th>
      <th>URL</th>
      <th>Title Type</th>
      <th>IMDb Rating</th>
      <th>Runtime (mins)</th>
      <th>Year</th>
      <th>Genres</th>
      <th>Num Votes</th>
      <th>Release Date</th>
      <th>Directors</th>
      <th>Weekday</th>
      <th>WeekdayNumeric</th>
      <th>YearWatched</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>878</th>
      <td>tt0097073</td>
      <td>1</td>
      <td>2007-08-11</td>
      <td>Code Name Vengeance</td>
      <td>https://www.imdb.com/title/tt0097073/</td>
      <td>movie</td>
      <td>4.1</td>
      <td>96.0</td>
      <td>1987</td>
      <td>Action, Adventure, Drama, Thriller</td>
      <td>88.0</td>
      <td>1987-12-31</td>
      <td>David Winters</td>
      <td>Saturday</td>
      <td>5</td>
      <td>2007</td>
    </tr>
  </tbody>
</table>
</div>

<p>Frankly, this movie looks terrible. Thankfully, I don’t remember watching it (!)</p>

<h3 id="what-is-the-most-well-known-film-ive-watched-by-number-of-ratings-by-other-users">What is the <em>most</em> well-known film I’ve watched? (by number of ratings by other users)</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">movies</span><span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s">'Num Votes'</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="n">head</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Const</th>
      <th>Your Rating</th>
      <th>Date Rated</th>
      <th>Title</th>
      <th>URL</th>
      <th>Title Type</th>
      <th>IMDb Rating</th>
      <th>Runtime (mins)</th>
      <th>Year</th>
      <th>Genres</th>
      <th>Num Votes</th>
      <th>Release Date</th>
      <th>Directors</th>
      <th>Weekday</th>
      <th>WeekdayNumeric</th>
      <th>YearWatched</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>100</th>
      <td>tt0111161</td>
      <td>10</td>
      <td>2007-08-11</td>
      <td>The Shawshank Redemption</td>
      <td>https://www.imdb.com/title/tt0111161/</td>
      <td>movie</td>
      <td>9.3</td>
      <td>142.0</td>
      <td>1994</td>
      <td>Drama</td>
      <td>2301033.0</td>
      <td>1994-09-10</td>
      <td>Frank Darabont</td>
      <td>Saturday</td>
      <td>5</td>
      <td>2007</td>
    </tr>
  </tbody>
</table>
</div>

<p>This one needs no introduction!</p>

<h3 id="what-was-the-least-liked-film-ive-watched-by-ratings-by-other-users">What was the <em>least</em> liked film I’ve watched? (by ratings by other users)</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">movies</span><span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s">'IMDb Rating'</span><span class="p">).</span><span class="n">head</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Const</th>
      <th>Your Rating</th>
      <th>Date Rated</th>
      <th>Title</th>
      <th>URL</th>
      <th>Title Type</th>
      <th>IMDb Rating</th>
      <th>Runtime (mins)</th>
      <th>Year</th>
      <th>Genres</th>
      <th>Num Votes</th>
      <th>Release Date</th>
      <th>Directors</th>
      <th>Weekday</th>
      <th>WeekdayNumeric</th>
      <th>YearWatched</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>704</th>
      <td>tt0473024</td>
      <td>1</td>
      <td>2007-08-11</td>
      <td>Crossover</td>
      <td>https://www.imdb.com/title/tt0473024/</td>
      <td>movie</td>
      <td>2.1</td>
      <td>95.0</td>
      <td>2006</td>
      <td>Action, Sport</td>
      <td>8910.0</td>
      <td>2006-07-22</td>
      <td>Preston A. Whitmore II</td>
      <td>Saturday</td>
      <td>5</td>
      <td>2007</td>
    </tr>
  </tbody>
</table>
</div>

<p>Ah, this doesn’t look <em>that</em> bad</p>

<h3 id="what-was-the-most-liked-film-ive-watched-by-ratings-by-other-users">What was the <em>most</em> liked film I’ve watched? (by ratings by other users)</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">movies</span><span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s">'IMDb Rating'</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="n">head</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Const</th>
      <th>Your Rating</th>
      <th>Date Rated</th>
      <th>Title</th>
      <th>URL</th>
      <th>Title Type</th>
      <th>IMDb Rating</th>
      <th>Runtime (mins)</th>
      <th>Year</th>
      <th>Genres</th>
      <th>Num Votes</th>
      <th>Release Date</th>
      <th>Directors</th>
      <th>Weekday</th>
      <th>WeekdayNumeric</th>
      <th>YearWatched</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>100</th>
      <td>tt0111161</td>
      <td>10</td>
      <td>2007-08-11</td>
      <td>The Shawshank Redemption</td>
      <td>https://www.imdb.com/title/tt0111161/</td>
      <td>movie</td>
      <td>9.3</td>
      <td>142.0</td>
      <td>1994</td>
      <td>Drama</td>
      <td>2301033.0</td>
      <td>1994-09-10</td>
      <td>Frank Darabont</td>
      <td>Saturday</td>
      <td>5</td>
      <td>2007</td>
    </tr>
  </tbody>
</table>
</div>

<p>A certified classic.</p>

<h3 id="biggest-disparity-in-my-vote-vs-imdb">Biggest disparity in my vote vs IMDB?</h3>
<ul>
  <li>What was the popularly-least-liked film I’ve enjoyed?</li>
  <li>And the popularly-most-liked film I didn’t?</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">movies</span><span class="p">[</span><span class="s">'Vote Disparity - IMDb Liked more'</span><span class="p">]</span> <span class="o">=</span> <span class="n">movies</span><span class="p">[</span><span class="s">'IMDb Rating'</span><span class="p">]</span> <span class="o">-</span> <span class="n">movies</span><span class="p">[</span><span class="s">'Your Rating'</span><span class="p">]</span>
<span class="n">movies</span><span class="p">.</span><span class="n">sort_values</span><span class="p">([</span><span class="s">'Vote Disparity - IMDb Liked more'</span><span class="p">,</span> <span class="s">'IMDb Rating'</span><span class="p">,</span> <span class="s">'Num Votes'</span><span class="p">],</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="n">head</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Const</th>
      <th>Your Rating</th>
      <th>Date Rated</th>
      <th>Title</th>
      <th>URL</th>
      <th>Title Type</th>
      <th>IMDb Rating</th>
      <th>Runtime (mins)</th>
      <th>Year</th>
      <th>Genres</th>
      <th>Num Votes</th>
      <th>Release Date</th>
      <th>Directors</th>
      <th>Weekday</th>
      <th>WeekdayNumeric</th>
      <th>YearWatched</th>
      <th>Vote Disparity - IMDb Liked more</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>95</th>
      <td>tt0110912</td>
      <td>1</td>
      <td>2008-08-19</td>
      <td>Pulp Fiction</td>
      <td>https://www.imdb.com/title/tt0110912/</td>
      <td>movie</td>
      <td>8.9</td>
      <td>154.0</td>
      <td>1994</td>
      <td>Crime, Drama</td>
      <td>1796406.0</td>
      <td>1994-05-21</td>
      <td>Quentin Tarantino</td>
      <td>Tuesday</td>
      <td>1</td>
      <td>2008</td>
      <td>7.9</td>
    </tr>
  </tbody>
</table>
</div>

<p>Yeah, Pulp Fiction is overrated.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">movies</span><span class="p">[</span><span class="s">'Vote Disparity - I Liked more'</span><span class="p">]</span> <span class="o">=</span> <span class="n">movies</span><span class="p">[</span><span class="s">'Your Rating'</span><span class="p">]</span> <span class="o">-</span> <span class="n">movies</span><span class="p">[</span><span class="s">'IMDb Rating'</span><span class="p">]</span>
<span class="n">movies</span><span class="p">.</span><span class="n">sort_values</span><span class="p">([</span><span class="s">'Vote Disparity - I Liked more'</span><span class="p">,</span> <span class="s">'IMDb Rating'</span><span class="p">,</span> <span class="s">'Num Votes'</span><span class="p">],</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="n">head</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Const</th>
      <th>Your Rating</th>
      <th>Date Rated</th>
      <th>Title</th>
      <th>URL</th>
      <th>Title Type</th>
      <th>IMDb Rating</th>
      <th>Runtime (mins)</th>
      <th>Year</th>
      <th>Genres</th>
      <th>Num Votes</th>
      <th>Release Date</th>
      <th>Directors</th>
      <th>Weekday</th>
      <th>WeekdayNumeric</th>
      <th>YearWatched</th>
      <th>Vote Disparity - IMDb Liked more</th>
      <th>Vote Disparity - I Liked more</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>469</th>
      <td>tt0250310</td>
      <td>7</td>
      <td>2009-02-19</td>
      <td>Corky Romano</td>
      <td>https://www.imdb.com/title/tt0250310/</td>
      <td>movie</td>
      <td>4.7</td>
      <td>86.0</td>
      <td>2001</td>
      <td>Comedy, Crime</td>
      <td>12425.0</td>
      <td>2001-10-12</td>
      <td>Rob Pritts</td>
      <td>Thursday</td>
      <td>3</td>
      <td>2009</td>
      <td>-2.3</td>
      <td>2.3</td>
    </tr>
  </tbody>
</table>
</div>

<p>Corky Romano is a masterpiece!</p>

<h1 id="general-patterns">General patterns</h1>
<p>Finally, let’s visualize some general patterns</p>

<h3 id="film-durations">Film durations</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sns</span><span class="p">.</span><span class="n">distplot</span><span class="p">(</span><span class="n">movies</span><span class="p">[</span><span class="s">'Runtime (mins)'</span><span class="p">])</span>
</code></pre></div></div>

<p><img src="/assets/img/output_45_1.png" alt="png" /></p>

<h3 id="film-release-years">Film Release Years</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sns</span><span class="p">.</span><span class="n">catplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">"Year"</span><span class="p">,</span> <span class="n">kind</span><span class="o">=</span><span class="s">"count"</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">movies</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">aspect</span><span class="o">=</span><span class="mi">21</span><span class="o">/</span><span class="mi">9</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="/assets/img/output_47_1.png" alt="png" /></p>

<h3 id="film-genres">Film genres</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">genres</span> <span class="o">=</span> <span class="n">movies</span><span class="p">[</span><span class="s">'Genres'</span><span class="p">].</span><span class="n">astype</span><span class="p">(</span><span class="s">'str'</span><span class="p">).</span><span class="n">tolist</span><span class="p">()</span>
<span class="n">genres</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">','</span><span class="p">),</span> <span class="n">genres</span><span class="p">))</span>
<span class="n">genres</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="n">genres</span><span class="p">),</span> <span class="p">[])</span>
<span class="n">genres</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="n">strip</span><span class="p">(),</span> <span class="n">genres</span><span class="p">))</span>
<span class="n">genres</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="p">[</span><span class="n">x</span><span class="p">],</span> <span class="n">genres</span><span class="p">))</span>
<span class="n">genres</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">genres</span><span class="p">,</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'Genres'</span><span class="p">])</span>
<span class="n">sns</span><span class="p">.</span><span class="n">catplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">"Genres"</span><span class="p">,</span> <span class="n">kind</span><span class="o">=</span><span class="s">"count"</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">genres</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mi">9</span><span class="p">,</span> <span class="n">aspect</span><span class="o">=</span><span class="mi">21</span><span class="o">/</span><span class="mi">9</span><span class="p">,</span> <span class="n">order</span> <span class="o">=</span> <span class="n">genres</span><span class="p">[</span><span class="s">'Genres'</span><span class="p">].</span><span class="n">value_counts</span><span class="p">().</span><span class="n">index</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="/assets/img/output_49_1.png" alt="png" /></p>

<h3 id="directors">Directors</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">directors</span> <span class="o">=</span> <span class="n">movies</span><span class="p">[</span><span class="s">'Directors'</span><span class="p">].</span><span class="n">astype</span><span class="p">(</span><span class="s">'str'</span><span class="p">).</span><span class="n">tolist</span><span class="p">()</span>
<span class="n">directors</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">','</span><span class="p">),</span> <span class="n">directors</span><span class="p">))</span>
<span class="n">directors</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="n">directors</span><span class="p">),</span> <span class="p">[])</span>
<span class="n">directors</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="n">strip</span><span class="p">(),</span> <span class="n">directors</span><span class="p">))</span>
<span class="n">directors</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="p">[</span><span class="n">x</span><span class="p">],</span> <span class="n">directors</span><span class="p">))</span>
<span class="n">directors</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">directors</span><span class="p">,</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'Directors'</span><span class="p">])</span>
<span class="n">directors</span> <span class="o">=</span> <span class="n">directors</span><span class="p">.</span><span class="n">groupby</span><span class="p">([</span><span class="s">'Directors'</span><span class="p">]).</span><span class="n">size</span><span class="p">()</span>
<span class="n">directors</span> <span class="o">=</span> <span class="n">directors</span><span class="p">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s">'size'</span><span class="p">)</span>
<span class="n">directors</span> <span class="o">=</span> <span class="n">directors</span><span class="p">.</span><span class="n">sort_values</span><span class="p">([</span><span class="s">'size'</span><span class="p">],</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
<span class="n">directors</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Directors</th>
      <th>size</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>514</th>
      <td>Steven Spielberg</td>
      <td>15</td>
    </tr>
    <tr>
      <th>453</th>
      <td>Robert Zemeckis</td>
      <td>10</td>
    </tr>
    <tr>
      <th>111</th>
      <td>David Fincher</td>
      <td>8</td>
    </tr>
    <tr>
      <th>345</th>
      <td>Martin Scorsese</td>
      <td>8</td>
    </tr>
    <tr>
      <th>415</th>
      <td>Peter Jackson</td>
      <td>7</td>
    </tr>
    <tr>
      <th>423</th>
      <td>Quentin Tarantino</td>
      <td>7</td>
    </tr>
    <tr>
      <th>256</th>
      <td>John Hughes</td>
      <td>7</td>
    </tr>
    <tr>
      <th>85</th>
      <td>Christopher Nolan</td>
      <td>6</td>
    </tr>
    <tr>
      <th>464</th>
      <td>Ron Howard</td>
      <td>6</td>
    </tr>
    <tr>
      <th>155</th>
      <td>Ethan Coen</td>
      <td>6</td>
    </tr>
  </tbody>
</table>
</div>

<h3 id="whats-the-perfect-film-for-me">What’s the perfect film for me?</h3>
<p>Based on frequent attributes: It looks like that would be a Drama or Comedy, directed by Spielberg, made in 2011, that is about 100 minutes long! ‘War Horse’, anybody?</p>

<p>If we base it on rating, by restricting this to just films I rated &gt;= 8: A Drama, directed by Spielberg, made in 1999, that’s 120 minutes long. Perhaps, ‘Saving Private Ryan’?</p>

<p>This however would be an interesting small ML project: to create a model to predict a numeric rating for a given film, based on my previous ratings.</p>]]></content><author><name>Mansour Ahmed</name><email>mail@mansourahmed.com</email></author><summary type="html"><![CDATA[Intro I decided to dig into my film-watching habits as a data exploration exercise.]]></summary></entry><entry><title type="html">Working From Home</title><link href="http://localhost:4000/2021/03/wfh/" rel="alternate" type="text/html" title="Working From Home" /><published>2021-03-10T13:01:00-05:00</published><updated>2021-03-10T13:01:00-05:00</updated><id>http://localhost:4000/2021/03/wfh</id><content type="html" xml:base="http://localhost:4000/2021/03/wfh/"><![CDATA[<p>For me and countless others, this week marks one year of working from home (WFH). I decided to take a moment to reflect on what it’s been like, lessons learnt, and a view of the future.</p>

<h2 id="what-its-been-like">What it’s been like</h2>

<p>I’ll admit, I wildly underestimated how long this would all go on for (not a unique thought, I’m sure). I smile as I recall thinking it would just be a couple of weeks (I confidently left some snacks in my desk drawer!).</p>

<p>I’d had some previous extended WFH experience: a few years ago, I worked from home for six weeks following a sports injury. And, of course, I regularly work on personal projects in my spare time from home. However, this was very different. To name but a few reasons:</p>

<ol>
  <li>The uncertainty of when it would end made strategising difficult</li>
  <li>The lack of locations options of where one could work (one couldn’t just work in, say, a library or a coffee shop)</li>
  <li>The general background stress of the ongoing pandemic</li>
</ol>

<p>2020 was a bizarre year, to be sure. But, I must count my blessings. So, here’s an attempt at a balanced view:</p>

<p>Pros</p>

<ul>
  <li>More time to the day since I reclaimed my commute time</li>
  <li>A chance to take stock and focus on the most valuable tasks</li>
  <li>The cold, snowy NYC winter made not having to leave my home quite appealing!</li>
</ul>

<p>Cons</p>

<ul>
  <li>Not collaborating in certain ways, such as spontaneous ‘whiteboarding’ or ‘hallway conversations.’</li>
  <li>Collegial coffee breaks aren’t quite the same over video call(!)</li>
  <li>Missing out on commute-specific productivity (no phone signal? no problem!)</li>
  <li>Needing to recreate the structure and routine that a conventional in-office workday naturally provides</li>
</ul>

<h2 id="lessons-learnt">Lessons learnt</h2>

<p>I hope the circumstances which brought about this shift to WFH never recur. But should I find myself WFH for an extended period again, for whatever reason, I’ll leave a note to myself with some helpful tips to hit the ground running:</p>

<ul>
  <li>Prepare a good home office setup.
    <ul>
      <li>A spacious desk, comfortable chair, large monitor, and quality headphones/microphone will make the entire experience better.</li>
    </ul>
  </li>
  <li>Have a professional background for video calls and meetings.
    <ul>
      <li>Alternatively, configure a virtual one on your video call client.</li>
      <li>While I envy those with imposing bookshelves filled with weighty tomes as backgrounds, small New York City apartments don’t quite allow for that(!)</li>
    </ul>
  </li>
  <li>Recapture the value of commute time.
    <ul>
      <li>My subway rides used to be quite productive: I would read books, listen to podcasts, respond to emails; the morning commute was a great way to get a headstart on the day, and the evening commute was a great way to decompress between the office and home.</li>
      <li>Recreate this experience by going for a walk around your neighbourhood at the start and end of your workday.</li>
    </ul>
  </li>
  <li>Take well-earned breaks.
    <ul>
      <li>Be sure to take both small coffee breaks during the day, as well as annual leave days off.</li>
      <li>Self-care is vital both for your health and your productivity at work.</li>
    </ul>
  </li>
</ul>

<h2 id="the-future">The future</h2>

<p>I now go into the office one day per week, making for a nice change of scenery. Fortunately, I live within cycling distance of the office, and so I can avoid the subway!</p>

<p>With news of the rollout of multiple vaccines underway, I remain optimistic about the future. I look forward to a safe return to the office, whenever that might be.</p>

<p>Predictions of mass telecommuting have been around since the 1970s, and while 2020 certainly accelerated that, I don’t know if that trend will generally continue beyond the pandemic. From a personal perspective, I find that being together with my colleagues, present and in-person, maximises my collaboration, creativity, and productivity. Conversely, <a href="https://hbr.org/2020/08/research-knowledge-workers-are-more-productive-from-home">research suggests</a> that that is not the case more generally.</p>

<p>From a human perspective, I think we’re fundamentally social beings who need to connect to others in a way that video calls can never really replace. That alone might provide the impetus to return to the office. I look forward to the return to <em>normal</em>.</p>

<p><em>The views expressed are my own and not those of my employer.</em></p>]]></content><author><name>Mansour Ahmed</name><email>mail@mansourahmed.com</email></author><summary type="html"><![CDATA[For me and countless others, this week marks one year of working from home (WFH). I decided to take a moment to reflect on what it’s been like, lessons learnt, and a view of the future.]]></summary></entry><entry><title type="html">2020 Reading List</title><link href="http://localhost:4000/2020/12/2020-reading-list/" rel="alternate" type="text/html" title="2020 Reading List" /><published>2020-12-01T14:02:00-05:00</published><updated>2020-12-01T14:02:00-05:00</updated><id>http://localhost:4000/2020/12/2020-reading-list</id><content type="html" xml:base="http://localhost:4000/2020/12/2020-reading-list/"><![CDATA[<p>Another year, another retrospective reading list. With the ongoing pandemic, I have found myself reading more. I have continued with the trend of leaning towards audiobooks (I think this format works really well for non-fiction that is not <em>too</em> technical). This year, the list is mostly a mix of pop-science and racism analyses.</p>

<p>As usual, this isn’t necessarily an endorsement of any of these books, but I hope, at least, that you might find them interesting to read.</p>

<h3 id="books">Books</h3>
<ul>
  <li><a href="https://www.goodreads.com/book/show/26048551-fundamentals-of-deep-learning">Fundamentals of Deep Learning (Buduma/Locascio)</a></li>
  <li><a href="https://www.goodreads.com/book/show/22860191-introducing-economics">Introducing Economics: A Graphic Guide (Orrell)</a></li>
</ul>

<h3 id="audiobooks">Audiobooks</h3>
<ul>
  <li><a href="https://www.goodreads.com/book/show/43848929-talking-to-strangers">Talking To Strangers (Gladwell)</a></li>
  <li><a href="https://www.goodreads.com/book/show/2612.The_Tipping_Point">Tipping Point (Gladwell)</a></li>
  <li><a href="https://www.goodreads.com/book/show/15751404-david-and-goliath">David &amp; Goliath (Gladwell)</a></li>
  <li><a href="https://www.goodreads.com/book/show/40102.Blink">Blink (Gladwell)</a></li>
  <li><a href="https://www.goodreads.com/book/show/88061.Dreams_from_My_Father">Dreams From My Father (Obama)</a></li>
  <li><a href="https://www.goodreads.com/book/show/51152447-caste">Caste (Wilkerson)</a></li>
  <li><a href="https://www.goodreads.com/book/show/43708708-white-fragility">White Fragility (DiAngelo)</a></li>
  <li><a href="https://www.goodreads.com/book/show/25489625-between-the-world-and-me">Between the World and Me (Coates)</a></li>
  <li><a href="https://www.goodreads.com/book/show/35099718-so-you-want-to-talk-about-race">So You Want To Talk About Race (Oluo)</a></li>
  <li><a href="https://www.goodreads.com/book/show/92057.The_Autobiography_of_Malcolm_X">The Autobiography of Malcolm X (Malcolm X/Haley)</a></li>
  <li><a href="https://www.goodreads.com/book/show/43726556-self-portrait-in-black-and-white">Self-Portrait in Black and White (Williams)</a></li>
  <li><a href="https://www.goodreads.com/book/show/28186015-weapons-of-math-destruction">Weapons of Math Destruction (O’Neil)</a></li>
  <li><a href="https://www.goodreads.com/book/show/40121378-atomic-habits">Atomic Habits (Clear)</a></li>
  <li><a href="https://www.goodreads.com/book/show/40792344-mere-christianity">Mere Christianity (Lewis)</a></li>
  <li><a href="https://www.goodreads.com/book/show/52300107-caffeine">Caffeine (Pollan)</a></li>
</ul>]]></content><author><name>Mansour Ahmed</name><email>mail@mansourahmed.com</email></author><summary type="html"><![CDATA[Another year, another retrospective reading list. With the ongoing pandemic, I have found myself reading more. I have continued with the trend of leaning towards audiobooks (I think this format works really well for non-fiction that is not too technical). This year, the list is mostly a mix of pop-science and racism analyses.]]></summary></entry><entry><title type="html">AWS Certified</title><link href="http://localhost:4000/2020/01/2020-aws-certified/" rel="alternate" type="text/html" title="AWS Certified" /><published>2020-01-07T14:02:00-05:00</published><updated>2020-01-07T14:02:00-05:00</updated><id>http://localhost:4000/2020/01/aws-certified</id><content type="html" xml:base="http://localhost:4000/2020/01/2020-aws-certified/"><![CDATA[<p>I am now an <em>AWS Certified Solutions Architect (Associate)</em>.</p>

<p>I was a little nervous before taking the exam (it’s been a while!), but I’m glad to have been able to validate my technical skills.  Learn more about it <a href="https://aws.amazon.com/certification/certified-solutions-architect-associate/">here</a>.</p>

<center><a href="https://www.youracclaim.com/badges/9622ebb8-ad75-4937-aceb-119d3cbdd3b7/public_url"><img src="/assets/img/aws.png" alt="AWS Certified" width="300px" align="middle" /></a></center>]]></content><author><name>Mansour Ahmed</name><email>mail@mansourahmed.com</email></author><summary type="html"><![CDATA[I am now an AWS Certified Solutions Architect (Associate).]]></summary></entry><entry><title type="html">2019 Reading List</title><link href="http://localhost:4000/2019/12/2019-reading-list/" rel="alternate" type="text/html" title="2019 Reading List" /><published>2019-12-30T14:02:00-05:00</published><updated>2019-12-30T14:02:00-05:00</updated><id>http://localhost:4000/2019/12/2019-reading-list</id><content type="html" xml:base="http://localhost:4000/2019/12/2019-reading-list/"><![CDATA[<p>A little different this year, with the addition of audiobooks!</p>

<p>As ever, this isn’t necessarily an endorsement of any of these books :)</p>

<h3 id="books">Books</h3>
<ul>
  <li><a href="https://www.goodreads.com/en/book/show/21963238-basics-of-financial-econometrics">The Basics of Financial Econometrics (Fabozzi, et al.)</a></li>
  <li><a href="https://www.amazon.com/dp/075155703X">The ‘Very British Problems’ series (Temple)</a></li>
</ul>

<h3 id="audiobooks">Audiobooks</h3>
<ul>
  <li><a href="https://www.goodreads.com/book/show/3228917-outliers">Outliers (Gladwell)</a></li>
  <li><a href="https://en.wikipedia.org/wiki/Guns,_Germs,_and_Steel">Guns Germs And Steel (Diamond)</a></li>
  <li><a href="https://www.goodreads.com/book/show/38901702-lab-rats">Lab Rats (Lyons)</a></li>
  <li><a href="https://www.goodreads.com/book/show/26030703-disrupted">Disrupted: Ludicrous Misadventures into the Tech Start-Up Bubble (Lyons)</a></li>
  <li><a href="https://www.goodreads.com/en/book/show/40407320-biased">Biased (Eberhardt)</a></li>
  <li><a href="https://www.goodreads.com/book/show/36352480-natives">Natives: Race and Class in the Ruins of Empire (Akala)</a></li>
  <li><a href="https://www.goodreads.com/book/show/10408011-chavs">Chavs: The Demonization of the Working (Owen Jones)</a></li>
  <li><a href="https://www.goodreads.com/book/show/38527194-civilisations">First Contact/The Cult of Progress: Civilisations (Olusoga)</a></li>
  <li><a href="https://www.goodreads.com/en/book/show/37780792-hired">Hired (Bloodworth)</a></li>
  <li><a href="https://www.goodreads.com/book/show/242472.The_Black_Swan">Black Swan (Taleb)</a></li>
  <li><a href="https://www.goodreads.com/book/show/33261026-black-tudors">Black Tudors (Kaufmann)</a></li>
  <li><a href="https://www.goodreads.com/book/show/23158207-how-google-works">How Google Works (Schmidt)</a></li>
  <li><a href="https://www.goodreads.com/book/show/36609352-what-truth-sounds-like">What Truth Sounds Like (Dyson)</a></li>
  <li><a href="https://www.goodreads.com/book/show/2657.To_Kill_a_Mockingbird">To Kill a Mockingbird (Lee)</a></li>
  <li><a href="https://www.goodreads.com/book/show/36072.The_7_Habits_of_Highly_Effective_People">7 Habits of Highly Effective People (Covey)</a></li>
  <li><a href="https://www.goodreads.com/book/show/30257963-12-rules-for-life">12 Rules for Life: An Antidote to Chaos (Peterson)</a></li>
  <li><a href="https://www.goodreads.com/book/show/40170039-how-not-to-get-shot">How Not To Get Shot (Hughley)</a></li>
  <li><a href="https://www.goodreads.com/book/show/29780253-born-a-crime">Born a Crime: Stories from a South African Childhood (Noah)</a></li>
  <li><a href="https://www.goodreads.com/book/show/900.The_Game">The Game (Strauss)</a></li>
  <li><a href="https://www.goodreads.com/book/show/33559198-black-privilege">Black Privilege (Charlamagne)</a></li>
</ul>]]></content><author><name>Mansour Ahmed</name><email>mail@mansourahmed.com</email></author><summary type="html"><![CDATA[A little different this year, with the addition of audiobooks!]]></summary></entry></feed>